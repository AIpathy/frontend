import React, { useState, useEffect } from "react";
import { ArrowLeft, ChevronLeft, ChevronRight } from "lucide-react";
import { Link } from "react-router-dom";

const QUESTIONS = [
  "BaÅŸladÄ±ÄŸÄ±nÄ±z iÅŸleri tamamlamakta veya birden fazla iÅŸi planlayarak yÃ¼rÃ¼tmekte ne sÄ±klÄ±kla zorlanÄ±rsÄ±nÄ±z?",
  "Organizasyon gerektiren bir iÅŸ yapmanÄ±z zorunlu olduÄŸunda iÅŸlerinizi sÄ±raya koymakta ne sÄ±klÄ±kla zorluk yaÅŸarsÄ±nÄ±z?",
  "YÃ¼kÃ¼mlÃ¼lÃ¼klerinizi ve randevularÄ±nÄ±zÄ± hatÄ±rlamakta ne sÄ±klÄ±kla sorun yaÅŸarsÄ±nÄ±z?",
  "Ã‡ok fazla dÃ¼ÅŸÃ¼nmeyi ve konsantrasyonu gerektiren bir iÅŸe baÅŸlamakta ne sÄ±klÄ±kla gecikir ya da kaÃ§Ä±nÄ±rsÄ±nÄ±z?",
  "Uzun sÃ¼re oturmanÄ±z gerektiÄŸinde ya da dinlenirken ne sÄ±klÄ±kla huzursuzlaÅŸÄ±r, kÄ±pÄ±r kÄ±pÄ±r olur veya el/ayak hareketleri yaparsÄ±nÄ±z?",
  "Ne sÄ±klÄ±kla kendinizi aÅŸÄ±rÄ± aktif ve sanki motor takÄ±lmÄ±ÅŸ gibi bir ÅŸeyler yapmak zorunda hissedersiniz?",
  "SÄ±kÄ±cÄ± veya zor bir proje Ã¼zerinde Ã§alÄ±ÅŸÄ±rken ne sÄ±klÄ±kla dikkatsizce hatalar yaparsÄ±nÄ±z?",
  "Ortamda dikkat daÄŸÄ±tÄ±cÄ± unsurlar (gÃ¼rÃ¼ltÃ¼, konuÅŸmalar, tekrar eden iÅŸler) olduÄŸunda dikkatinizi sÃ¼rdÃ¼rmekte ne sÄ±klÄ±kla zorlanÄ±rsÄ±nÄ±z?",
  "Evde veya iÅŸte eÅŸyalarÄ± bulmakta ya da nereye koyduÄŸunuzu hatÄ±rlamakta ne sÄ±klÄ±kla gÃ¼Ã§lÃ¼k yaÅŸarsÄ±nÄ±z?",
  "ToplantÄ± veya benzer bir durumda oturmanÄ±z gerektiÄŸinde yerinizden kalkma ihtiyacÄ± hisseder misiniz?",
  "Kendinize ait boÅŸ zamanlarÄ±nÄ±zda gevÅŸemekte ve rahatlamakta zorlanÄ±r mÄ±sÄ±nÄ±z?",
  "Sosyal ortamlarda bulunduÄŸunuzda, ne sÄ±klÄ±kla Ã§ok konuÅŸtuÄŸunuzu fark edersiniz?",
  "KarÅŸÄ±nÄ±zdaki kiÅŸi konuÅŸmasÄ±nÄ± bitirmeden sÃ¶zÃ¼nÃ¼ kesme ya da soruyu erken yanÄ±tlama eÄŸiliminiz ne sÄ±klÄ±ktadÄ±r?",
  "SÄ±ra beklemeniz gereken durumlarda (Ã¶rneÄŸin konuÅŸma sÄ±rasÄ±, kuyruk) ne sÄ±klÄ±kla sabÄ±rsÄ±zlanÄ±rsÄ±nÄ±z?",
  "BaÅŸka bir iÅŸle meÅŸgul olduklarÄ±nda diÄŸer insanlarÄ± araya girip engeller misiniz?",
  "Okulda, evde ya da iÅŸte zor ya da ilginÃ§ olmayan ÅŸeylerin ilgimi Ã§ektiÄŸini fark ediyorum.",
  "YazÄ±lÄ± materyalleri Ã§ok ilginÃ§ ya da Ã§ok kolay olmadÄ±kÃ§a okumakta zorlanÄ±yorum.",
  "Ã‡abuk heyecanlanÄ±p, Ã§abuk sakinleÅŸiyorum.",
  "Genellikle huzursuzum ve kÃ¼Ã§Ã¼k ÅŸeyler beni sinirlendiriyor.",
  "DÃ¼ÅŸÃ¼nmeden sÃ¶ylediÄŸim ÅŸeyleri daha sonra inkÃ¢r ederim.",
  "KÃ¶tÃ¼ sonuÃ§lara yol aÃ§abileceÄŸini dÃ¼ÅŸÃ¼nmeden hÄ±zlÄ± kararlar alÄ±rÄ±m.",
  "Ä°nsanlarla iliÅŸkilerim, Ã¶nce konuÅŸup sonra dÃ¼ÅŸÃ¼nme eÄŸilimim nedeniyle zarar gÃ¶rÃ¼yor.",
  "Ruh halim iniÅŸ Ã§Ä±kÄ±ÅŸlarla doludur.",
  "KolaylÄ±kla hayal kÄ±rÄ±klÄ±ÄŸÄ±na uÄŸruyorum.",
  "KÄ±rÄ±lgan biriyim ve birÃ§ok ÅŸey beni kolaylÄ±kla incitiyor.",
  "Her zaman bir yere gidecek gibiyim.",
  "Kafamda Ã§ok fazla takÄ±ntÄ± var.",
  "Zihnime iÅŸlevselliÄŸini yitirecek kadar Ã§ok gereksiz ÅŸeyler dolar.",
  "DÃ¼ÅŸÃ¼ncelerim zihnimde toplarÄ±n duvara Ã§arpmasÄ± gibi Ã§arpÄ±ÅŸarak dolaÅŸÄ±r.",
  "Beynim aynÄ± anda birden Ã§ok kanalÄ±n gÃ¶sterildiÄŸi bir televizyon ekranÄ± gibidir.",
  "GÃ¼ndÃ¼z hayal gÃ¶rmeyi engelleyemiyorum.",
  "Beynimin organize olamayan Ã§alÄ±ÅŸma ÅŸeklinden dolayÄ± stres yaÅŸÄ±yorum.",
  "Genellikle huzurlu olsam da aniden yoÄŸun Ã¶fke ya da sinir yaÅŸayabiliyorum.",
  "Dikkatsizlik nedeniyle genellikle olaylarÄ± ya da insanlarÄ± yanlÄ±ÅŸ anlÄ±yorum.",
  "KararsÄ±zlÄ±k nedeniyle Ã¶nemsiz iÅŸlerde bile zaman kaybediyorum.",
  "DuygularÄ±mÄ± bastÄ±rmak yerine ani tepkiler verir, sonra piÅŸman olurum."
];

const OPTIONS = [
  { value: 1, label: "HiÃ§ bir zaman" },
  { value: 2, label: "Nadiren" },
  { value: 3, label: "Ara sÄ±ra" },
  { value: 4, label: "SÄ±klÄ±kla" },
  { value: 5, label: "Ã‡ok sÄ±k" }
];

function getResultText(score) {
  if (score <= 80) return "DÃ¼ÅŸÃ¼k DEHB belirtileri - Normal dÃ¼zeyde";
  if (score <= 120) return "Hafif DEHB belirtileri - Dikkatli olmalÄ±sÄ±nÄ±z";
  if (score <= 150) return "Orta dÃ¼zeyde DEHB belirtileri - Profesyonel destek Ã¶nerilir";
  return "YÃ¼ksek DEHB belirtileri - Mutlaka profesyonel yardÄ±m alÄ±n";
}

export default function DEHBTest() {
  const [answers, setAnswers] = useState(Array(QUESTIONS.length).fill(null));
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [submitted, setSubmitted] = useState(false);
  const [autoNext, setAutoNext] = useState(false);

  // KullanÄ±cÄ± tipine gÃ¶re geri dÃ¶nÃ¼ÅŸ yolu
  const userType = localStorage.getItem("userType");
  const backPath = userType === "doctor" ? "/doctor" : "/dashboard";

  const handleAnswerChange = (value) => {
    const newAnswers = [...answers];
    newAnswers[currentQuestion] = value;
    setAnswers(newAnswers);
    
    // Otomatik geÃ§iÅŸ iÃ§in timer baÅŸlat
    setAutoNext(true);
  };

  // Otomatik geÃ§iÅŸ efekti
  useEffect(() => {
    if (autoNext && answers[currentQuestion] !== null) {
      const timer = setTimeout(() => {
        if (currentQuestion < QUESTIONS.length - 1) {
          setCurrentQuestion(currentQuestion + 1);
        } else {
          // Son soru cevaplandÄ±ÄŸÄ±nda otomatik olarak sonuÃ§ ekranÄ±na geÃ§
          setSubmitted(true);
        }
        setAutoNext(false);
      }, 800); // 0.8 saniye sonra otomatik geÃ§iÅŸ

      return () => clearTimeout(timer);
    }
  }, [autoNext, answers, currentQuestion]);

  const handleNext = () => {
    if (currentQuestion < QUESTIONS.length - 1) {
      setCurrentQuestion(currentQuestion + 1);
      setAutoNext(false); // Manuel geÃ§iÅŸte otomatik geÃ§iÅŸi iptal et
    }
  };

  const handlePrevious = () => {
    if (currentQuestion > 0) {
      setCurrentQuestion(currentQuestion - 1);
      setAutoNext(false); // Manuel geÃ§iÅŸte otomatik geÃ§iÅŸi iptal et
    }
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    setSubmitted(true);
  };

  const totalScore = answers.reduce((sum, v) => sum + (v !== null ? Number(v) : 0), 0);
  const allAnswered = answers.every((v) => v !== null);
  const currentAnswer = answers[currentQuestion];

  if (submitted) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-green-50 to-emerald-50 relative">
        <Link
          to={backPath}
          className="absolute top-6 left-6 text-gray-700 hover:text-green-600 transition-colors text-2xl flex items-center gap-2"
          title="Dashboard'a DÃ¶n"
        >
          <ArrowLeft className="w-6 h-6" />
          <span className="hidden sm:inline">Dashboard</span>
        </Link>

        <div className="max-w-4xl mx-auto px-6 py-20">
          <div className="bg-white/90 backdrop-blur-xl rounded-3xl shadow-2xl border-2 border-green-200/50 p-8 md:p-12">
            <div className="text-center mb-8">
              <div className="w-20 h-20 bg-gradient-to-br from-green-500 to-emerald-600 rounded-full flex items-center justify-center mx-auto mb-6 shadow-xl">
                <span className="text-3xl">ğŸ§ </span>
              </div>
              <h1 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
                DEHB (Dikkat EksikliÄŸi ve Hiperaktivite BozukluÄŸu) Testi
              </h1>
              <p className="text-gray-600 text-lg">
                Test Sonucunuz
              </p>
            </div>

            <div className="bg-gradient-to-r from-green-100 to-emerald-100 rounded-2xl p-8 mb-8 border-2 border-green-200/50">
              <div className="text-center">
                <div className="text-6xl font-bold text-green-700 mb-4">
                  {totalScore}
                </div>
                <div className="text-2xl font-semibold text-gray-800 mb-2">
                  {getResultText(totalScore)}
                </div>
                <div className="text-gray-600">
                  Toplam Puan: {totalScore} / {QUESTIONS.length * 5}
                </div>
              </div>
            </div>

            <div className="space-y-6">
              <div className="bg-white/80 rounded-2xl p-6 border-2 border-green-200/50">
                <h3 className="text-xl font-bold text-gray-800 mb-4">SonuÃ§ AÃ§Ä±klamasÄ±</h3>
                <p className="text-gray-700 leading-relaxed">
                  {totalScore <= 80 && "DEHB belirtileriniz dÃ¼ÅŸÃ¼k dÃ¼zeyde. GÃ¼nlÃ¼k yaÅŸamÄ±nÄ±zÄ± etkileyen Ã¶nemli bir sorun gÃ¶rÃ¼nmÃ¼yor."}
                  {totalScore > 80 && totalScore <= 120 && "DEHB belirtileriniz hafif dÃ¼zeyde. BazÄ± dikkat ve hiperaktivite sorunlarÄ± yaÅŸayabilirsiniz."}
                  {totalScore > 120 && totalScore <= 150 && "DEHB belirtileriniz orta dÃ¼zeyde. GÃ¼nlÃ¼k yaÅŸamÄ±nÄ±zÄ± etkileyen dikkat ve hiperaktivite sorunlarÄ± yaÅŸayabilirsiniz."}
                  {totalScore > 150 && "DEHB belirtileriniz yÃ¼ksek dÃ¼zeyde. Bu belirtiler gÃ¼nlÃ¼k yaÅŸamÄ±nÄ±zÄ± Ã¶nemli Ã¶lÃ§Ã¼de etkileyebilir."}
                </p>
              </div>

              <div className="bg-white/80 rounded-2xl p-6 border-2 border-green-200/50">
                <h3 className="text-xl font-bold text-gray-800 mb-4">Ã–neriler</h3>
                <ul className="text-gray-700 space-y-2">
                  <li>â€¢ Profesyonel psikolojik destek almayÄ± dÃ¼ÅŸÃ¼nebilirsiniz</li>
                  <li>â€¢ Dikkat ve konsantrasyon teknikleri Ã¶ÄŸrenebilirsiniz</li>
                  <li>â€¢ Zaman yÃ¶netimi ve organizasyon becerileri geliÅŸtirin</li>
                  <li>â€¢ Stres yÃ¶netimi ve gevÅŸeme teknikleri faydalÄ± olabilir</li>
                </ul>
              </div>
            </div>

            <div className="mt-8 text-center">
              <Link
                to={backPath}
                className="group relative inline-flex items-center gap-3 bg-gradient-to-r from-green-600 via-emerald-600 to-teal-600 hover:from-green-700 hover:via-emerald-700 hover:to-teal-700 text-white px-8 py-4 rounded-2xl font-semibold text-lg hover:scale-105 transition-all duration-300 shadow-lg overflow-hidden"
              >
                {/* Gradient overlay on hover */}
                <div className="absolute inset-0 bg-gradient-to-r from-green-500 via-emerald-500 to-teal-500 opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
                
                {/* Shine effect */}
                <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000" />
                
                {/* Content */}
                <span className="relative z-10">Dashboard'a DÃ¶n</span>
              </Link>
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-emerald-50 relative">
      <Link
        to={backPath}
        className="absolute top-6 left-6 text-gray-700 hover:text-green-600 transition-colors text-2xl flex items-center gap-2"
        title="Dashboard'a DÃ¶n"
      >
        <ArrowLeft className="w-6 h-6" />
        <span className="hidden sm:inline">Dashboard</span>
      </Link>

      <div className="max-w-4xl mx-auto px-6 py-20">
        <div className="bg-white/90 backdrop-blur-xl rounded-3xl shadow-2xl border-2 border-green-200/50 p-8 md:p-12">
          {/* Header */}
          <div className="text-center mb-8">
            <div className="w-20 h-20 bg-gradient-to-br from-green-500 to-emerald-600 rounded-full flex items-center justify-center mx-auto mb-6 shadow-xl">
              <span className="text-3xl">ğŸ§ </span>
            </div>
            <h1 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
              DEHB (Dikkat EksikliÄŸi ve Hiperaktivite BozukluÄŸu) Testi
            </h1>
            <p className="text-gray-600 text-lg">
              Dikkat ve hiperaktivite belirtilerinizi deÄŸerlendirin
            </p>
          </div>

          {/* Progress Bar */}
          <div className="mb-8">
            <div className="flex justify-between items-center mb-2">
              <span className="text-sm font-medium text-gray-700">
                Soru {currentQuestion + 1} / {QUESTIONS.length}
              </span>
              <span className="text-sm font-medium text-gray-700">
                %{Math.round(((currentQuestion + 1) / QUESTIONS.length) * 100)}
              </span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-3">
              <div
                className="bg-gradient-to-r from-green-500 to-emerald-600 h-3 rounded-full transition-all duration-500"
                style={{ width: `${((currentQuestion + 1) / QUESTIONS.length) * 100}%` }}
              ></div>
            </div>
          </div>

          {/* Question */}
          <div className="mb-8">
            <h2 className="text-xl md:text-2xl font-semibold text-gray-800 mb-6 leading-relaxed">
              {QUESTIONS[currentQuestion]}
            </h2>
          </div>

          {/* Options */}
          <div className="space-y-4 mb-8">
            {OPTIONS.map((option) => (
              <button
                key={option.value}
                onClick={() => handleAnswerChange(option.value)}
                className={`w-full p-4 rounded-2xl border-2 transition-all duration-300 text-left ${
                  currentAnswer === option.value
                    ? "bg-gradient-to-r from-green-500 to-emerald-600 text-white border-green-500 shadow-lg scale-105"
                    : "bg-white/80 text-gray-700 border-gray-200 hover:border-green-300 hover:bg-green-50/50"
                }`}
              >
                <div className="flex items-center justify-between">
                  <span className="font-medium">{option.label}</span>
                  {currentAnswer === option.value && (
                    <div className="w-6 h-6 bg-white/20 rounded-full flex items-center justify-center">
                      <div className="w-3 h-3 bg-white rounded-full"></div>
                    </div>
                  )}
                </div>
              </button>
            ))}
          </div>

          {/* Navigation */}
          <div className="flex justify-between items-center">
            <button
              onClick={handlePrevious}
              disabled={currentQuestion === 0}
              className={`flex items-center gap-2 px-6 py-3 rounded-2xl font-semibold transition-all duration-300 ${
                currentQuestion === 0
                  ? "bg-gray-200 text-gray-400 cursor-not-allowed"
                  : "bg-gray-100 text-gray-700 hover:bg-gray-200"
              }`}
            >
              <ChevronLeft className="w-5 h-5" />
              Ã–nceki
            </button>

            <div className="text-sm text-gray-600">
              {answers.filter(a => a !== null).length} / {QUESTIONS.length} cevaplandÄ±
            </div>

            {currentQuestion < QUESTIONS.length - 1 ? (
              <button
                onClick={handleNext}
                disabled={currentAnswer === null}
                className={`flex items-center gap-2 px-6 py-3 rounded-2xl font-semibold transition-all duration-300 ${
                  currentAnswer === null
                    ? "bg-gray-200 text-gray-400 cursor-not-allowed"
                    : "bg-gradient-to-r from-green-500 to-emerald-600 text-white hover:from-green-600 hover:to-emerald-700"
                }`}
              >
                Sonraki
                <ChevronRight className="w-5 h-5" />
              </button>
            ) : (
              <button
                onClick={handleSubmit}
                disabled={!allAnswered}
                className={`flex items-center gap-2 px-6 py-3 rounded-2xl font-semibold transition-all duration-300 ${
                  !allAnswered
                    ? "bg-gray-200 text-gray-400 cursor-not-allowed"
                    : "bg-gradient-to-r from-green-500 to-emerald-600 text-white hover:from-green-600 hover:to-emerald-700"
                }`}
              >
                Sonucu GÃ¶r
                <ChevronRight className="w-5 h-5" />
              </button>
            )}
          </div>
        </div>
      </div>
    </div>
  );
} 