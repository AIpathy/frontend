import React, { useState, useEffect } from "react";
import { ArrowLeft, ChevronLeft, ChevronRight } from "lucide-react";
import { Link } from "react-router-dom";

const QUESTIONS = [
  "Bu olay benim davranÄ±ÅŸlarÄ±mdan dolayÄ± yaÅŸandÄ±.",
  "DoÄŸru ÅŸeyi yapacaÄŸÄ±m konusunda kendime gÃ¼venemiyorum.",
  "Ben zayÄ±f bir insanÄ±m.",
  "Ã–fkemi kontrol edemeyip korkunÃ§ bir ÅŸey yapabilirim.",
  "En kÃ¼Ã§Ã¼k Ã¼zÃ¼ntÃ¼yle bile baÅŸa Ã§Ä±kamam.",
  "Eskiden mutlu bir insandÄ±m ÅŸimdiyse hep mutsuzum.",
  "Ä°nsanlara gÃ¼venilmez.",
  "Her zaman tetikte olmalÄ±yÄ±m.",
  "Ä°Ã§imde bir ÅŸeylerin Ã¶ldÃ¼ÄŸÃ¼nÃ¼ hissediyorum.",
  "Size kimin zarar vereceÄŸini asla bilemezsiniz.",
  "Ã‡ok dikkatli olmalÄ±yÄ±m Ã§Ã¼nkÃ¼ bundan sonra ne olacaÄŸÄ± hiÃ§ belli olmaz.",
  "Ben yetersizim.",
  "EÄŸer olayÄ± dÃ¼ÅŸÃ¼nÃ¼rsem, bununla baÅŸa Ã§Ä±kamayabilirim.",
  "BÃ¶yle bir insan olduÄŸum iÃ§in bu olay benim baÅŸÄ±ma geldi.",
  "Bu olaydan dolayÄ± verdiÄŸim tepkiler git gide delirdiÄŸimi gÃ¶steriyor.",
  "Bir daha asla normal duygular hissedemeyeceÄŸim.",
  "DÃ¼nya tehlikeli bir yerdir.",
  "Bir baÅŸkasÄ± olsa bu olayÄ±n olmasÄ±nÄ± engelleyebilirdi.",
  "Bundan sonrasÄ± iÃ§in kalÄ±cÄ± olarak zarar gÃ¶rdÃ¼m.",
  "Kendimi insan deÄŸil, eÅŸya gibi hissediyorum.",
  "Benim yerimde baÅŸkasÄ± olsa bu duruma dÃ¼ÅŸmezdi.",
  "Ä°nsanlara gÃ¼venemem.",
  "Kendimi yalnÄ±z ve diÄŸer insanlardan uzak hissediyorum.",
  "Bir geleceÄŸim kalmadÄ±.",
  "KÃ¶tÃ¼ ÅŸeylerin baÅŸÄ±ma gelmesini engelleyemem.",
  "Ä°nsanlar gÃ¶rÃ¼ndÃ¼kleri gibi deÄŸildir.",
  "YaÅŸadÄ±ÄŸÄ±m olay hayatÄ±mÄ± mahvetti.",
  "Bende yanlÄ±ÅŸ giden bir ÅŸeyler var.",
  "Bu olaydan beri verdiÄŸim tepkiler, benim olayla baÅŸa Ã§Ä±kmayÄ± beceremediÄŸimi gÃ¶steriyor.",
  "Bu olayÄ±n gerÃ§ekleÅŸmesine neden olan, benimle ilgili bir ÅŸeyler var.",
  "ArtÄ±k kendimi tanÄ±yamÄ±yorum.",
  "Kendime gÃ¼venemiyorum.",
  "Bundan sonra artÄ±k gÃ¼zel bir ÅŸeyler yaÅŸamam mÃ¼mkÃ¼n deÄŸil.",
  "Bu olayla ilgili dÃ¼ÅŸÃ¼ncelerime tahammÃ¼l edemeyip daÄŸÄ±labilirim.",
  "DuygularÄ±mÄ± kontrol edemeyeceÄŸim ve korkunÃ§ bir ÅŸey olacak.",
  "Ä°nsanÄ±n baÅŸÄ±na ne zaman kÃ¶tÃ¼ bir ÅŸey geleceÄŸi asla bilinemez."
];

const OPTIONS = [
  { value: 1, label: "Kesinlikle katÄ±lmÄ±yorum" },
  { value: 2, label: "KatÄ±lmÄ±yorum" },
  { value: 3, label: "KararsÄ±zÄ±m" },
  { value: 4, label: "KatÄ±lÄ±yorum" },
  { value: 5, label: "Kesinlikle katÄ±lÄ±yorum" }
];

function getResultText(score) {
  if (score <= 50) return "DÃ¼ÅŸÃ¼k travma sonrasÄ± biliÅŸ dÃ¼zeyi";
  if (score <= 80) return "Orta dÃ¼zeyde travma sonrasÄ± biliÅŸ";
  if (score <= 120) return "YÃ¼ksek travma sonrasÄ± biliÅŸ dÃ¼zeyi";
  return "Ã‡ok yÃ¼ksek travma sonrasÄ± biliÅŸ dÃ¼zeyi";
}

export default function TSBETest() {
  const [answers, setAnswers] = useState(Array(QUESTIONS.length).fill(null));
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [submitted, setSubmitted] = useState(false);
  const [autoNext, setAutoNext] = useState(false);

  // KullanÄ±cÄ± tipine gÃ¶re geri dÃ¶nÃ¼ÅŸ yolu
  const userType = localStorage.getItem("userType");
  const backPath = userType === "doctor" ? "/doctor" : "/dashboard";

  const handleAnswerChange = (value) => {
    const newAnswers = [...answers];
    newAnswers[currentQuestion] = value;
    setAnswers(newAnswers);
    
    // Otomatik geÃ§iÅŸ iÃ§in timer baÅŸlat
    setAutoNext(true);
  };

  // Otomatik geÃ§iÅŸ efekti
  useEffect(() => {
    if (autoNext && answers[currentQuestion] !== null) {
      const timer = setTimeout(() => {
        if (currentQuestion < QUESTIONS.length - 1) {
          setCurrentQuestion(currentQuestion + 1);
        } else {
          // Son soru cevaplandÄ±ÄŸÄ±nda otomatik olarak sonuÃ§ ekranÄ±na geÃ§
          setSubmitted(true);
        }
        setAutoNext(false);
      }, 800); // 0.8 saniye sonra otomatik geÃ§iÅŸ

      return () => clearTimeout(timer);
    }
  }, [autoNext, answers, currentQuestion]);

  const handleNext = () => {
    if (currentQuestion < QUESTIONS.length - 1) {
      setCurrentQuestion(currentQuestion + 1);
      setAutoNext(false); // Manuel geÃ§iÅŸte otomatik geÃ§iÅŸi iptal et
    }
  };

  const handlePrevious = () => {
    if (currentQuestion > 0) {
      setCurrentQuestion(currentQuestion - 1);
      setAutoNext(false); // Manuel geÃ§iÅŸte otomatik geÃ§iÅŸi iptal et
    }
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    setSubmitted(true);
  };

  const totalScore = answers.reduce((sum, v) => sum + (v !== null ? Number(v) : 0), 0);
  const allAnswered = answers.every((v) => v !== null);
  const currentAnswer = answers[currentQuestion];

  if (submitted) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-green-50 to-emerald-50 relative">
        <Link
          to={backPath}
          className="absolute top-6 left-6 text-gray-700 hover:text-green-600 transition-colors text-2xl flex items-center gap-2"
          title="Dashboard'a DÃ¶n"
        >
          <ArrowLeft className="w-6 h-6" />
          <span className="hidden sm:inline">Dashboard</span>
        </Link>

        <div className="max-w-4xl mx-auto px-6 py-20">
          <div className="bg-white/90 backdrop-blur-xl rounded-3xl shadow-2xl border-2 border-green-200/50 p-8 md:p-12">
            <div className="text-center mb-8">
              <div className="w-20 h-20 bg-gradient-to-br from-green-500 to-emerald-600 rounded-full flex items-center justify-center mx-auto mb-6 shadow-xl">
                <span className="text-3xl">ğŸ§ </span>
              </div>
              <h1 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
                Travma SonrasÄ± BiliÅŸler Envanteri (TSBE)
              </h1>
              <p className="text-gray-600 text-lg">
                Test Sonucunuz
              </p>
            </div>

            <div className="bg-gradient-to-r from-green-100 to-emerald-100 rounded-2xl p-8 mb-8 border-2 border-green-200/50">
              <div className="text-center">
                <div className="text-6xl font-bold text-green-700 mb-4">
                  {totalScore}
                </div>
                <div className="text-2xl font-semibold text-gray-800 mb-2">
                  {getResultText(totalScore)}
                </div>
                <div className="text-gray-600">
                  Toplam Puan: {totalScore} / {QUESTIONS.length * 5}
                </div>
              </div>
            </div>

            <div className="space-y-6">
              <div className="bg-white/80 rounded-2xl p-6 border-2 border-green-200/50">
                <h3 className="text-xl font-bold text-gray-800 mb-4">SonuÃ§ AÃ§Ä±klamasÄ±</h3>
                <p className="text-gray-700 leading-relaxed">
                  {totalScore <= 50 && "Travma sonrasÄ± biliÅŸleriniz dÃ¼ÅŸÃ¼k dÃ¼zeyde. Bu, travmatik olaydan sonra olumsuz dÃ¼ÅŸÃ¼ncelerinizin az olduÄŸunu gÃ¶sterir."}
                  {totalScore > 50 && totalScore <= 80 && "Travma sonrasÄ± biliÅŸleriniz orta dÃ¼zeyde. BazÄ± olumsuz dÃ¼ÅŸÃ¼nceler yaÅŸadÄ±ÄŸÄ±nÄ±zÄ± gÃ¶sterir."}
                  {totalScore > 80 && totalScore <= 120 && "Travma sonrasÄ± biliÅŸleriniz yÃ¼ksek dÃ¼zeyde. Travmatik olaydan sonra Ã¶nemli olumsuz dÃ¼ÅŸÃ¼nceler yaÅŸadÄ±ÄŸÄ±nÄ±zÄ± gÃ¶sterir."}
                  {totalScore > 120 && "Travma sonrasÄ± biliÅŸleriniz Ã§ok yÃ¼ksek dÃ¼zeyde. Travmatik olaydan sonra yoÄŸun olumsuz dÃ¼ÅŸÃ¼nceler yaÅŸadÄ±ÄŸÄ±nÄ±zÄ± gÃ¶sterir."}
                </p>
              </div>

              <div className="bg-white/80 rounded-2xl p-6 border-2 border-green-200/50">
                <h3 className="text-xl font-bold text-gray-800 mb-4">Ã–neriler</h3>
                <ul className="text-gray-700 space-y-2">
                  <li>â€¢ Profesyonel psikolojik destek almayÄ± dÃ¼ÅŸÃ¼nebilirsiniz</li>
                  <li>â€¢ Travma sonrasÄ± stres bozukluÄŸu (TSSB) konusunda uzman desteÄŸi</li>
                  <li>â€¢ BiliÅŸsel davranÄ±ÅŸÃ§Ä± terapi (BDT) faydalÄ± olabilir</li>
                  <li>â€¢ Kendi kendine yardÄ±m teknikleri Ã¶ÄŸrenebilirsiniz</li>
                </ul>
              </div>
            </div>

            <div className="mt-8 text-center">
              <Link
                to={backPath}
                className="group relative inline-flex items-center gap-3 bg-gradient-to-r from-green-600 via-emerald-600 to-teal-600 hover:from-green-700 hover:via-emerald-700 hover:to-teal-700 text-white px-8 py-4 rounded-2xl font-semibold text-lg hover:scale-105 transition-all duration-300 shadow-lg overflow-hidden"
              >
                {/* Gradient overlay on hover */}
                <div className="absolute inset-0 bg-gradient-to-r from-green-500 via-emerald-500 to-teal-500 opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
                
                {/* Shine effect */}
                <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000" />
                
                {/* Content */}
                <span className="relative z-10">Dashboard'a DÃ¶n</span>
              </Link>
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-emerald-50 relative">
      <Link
        to={backPath}
        className="absolute top-6 left-6 text-gray-700 hover:text-green-600 transition-colors text-2xl flex items-center gap-2"
        title="Dashboard'a DÃ¶n"
      >
        <ArrowLeft className="w-6 h-6" />
        <span className="hidden sm:inline">Dashboard</span>
      </Link>

      <div className="max-w-4xl mx-auto px-6 py-20">
        <div className="bg-white/90 backdrop-blur-xl rounded-3xl shadow-2xl border-2 border-green-200/50 p-8 md:p-12">
          {/* Header */}
          <div className="text-center mb-8">
            <div className="w-20 h-20 bg-gradient-to-br from-green-500 to-emerald-600 rounded-full flex items-center justify-center mx-auto mb-6 shadow-xl">
              <span className="text-3xl">ğŸ§ </span>
            </div>
            <h1 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
              Travma SonrasÄ± BiliÅŸler Envanteri (TSBE)
            </h1>
            <p className="text-gray-600 text-lg">
              Son 1 ay iÃ§inde yaÅŸadÄ±ÄŸÄ±nÄ±z travmatik bir olayla ilgili dÃ¼ÅŸÃ¼ncelerinizi deÄŸerlendirin
            </p>
          </div>

          {/* Progress Bar */}
          <div className="mb-8">
            <div className="flex justify-between items-center mb-2">
              <span className="text-sm font-medium text-gray-700">
                Soru {currentQuestion + 1} / {QUESTIONS.length}
              </span>
              <span className="text-sm font-medium text-gray-700">
                %{Math.round(((currentQuestion + 1) / QUESTIONS.length) * 100)}
              </span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-3">
              <div
                className="bg-gradient-to-r from-green-500 to-emerald-600 h-3 rounded-full transition-all duration-500"
                style={{ width: `${((currentQuestion + 1) / QUESTIONS.length) * 100}%` }}
              ></div>
            </div>
          </div>

          {/* Question */}
          <div className="mb-8">
            <h2 className="text-xl md:text-2xl font-semibold text-gray-800 mb-6 leading-relaxed">
              {QUESTIONS[currentQuestion]}
            </h2>
          </div>

          {/* Options */}
          <div className="space-y-4 mb-8">
            {OPTIONS.map((option) => (
              <button
                key={option.value}
                onClick={() => handleAnswerChange(option.value)}
                className={`w-full p-4 rounded-2xl border-2 transition-all duration-300 text-left ${
                  currentAnswer === option.value
                    ? "bg-gradient-to-r from-green-500 to-emerald-600 text-white border-green-500 shadow-lg scale-105"
                    : "bg-white/80 text-gray-700 border-gray-200 hover:border-green-300 hover:bg-green-50/50"
                }`}
              >
                <div className="flex items-center justify-between">
                  <span className="font-medium">{option.label}</span>
                  {currentAnswer === option.value && (
                    <div className="w-6 h-6 bg-white/20 rounded-full flex items-center justify-center">
                      <div className="w-3 h-3 bg-white rounded-full"></div>
                    </div>
                  )}
                </div>
              </button>
            ))}
          </div>

          {/* Navigation */}
          <div className="flex justify-between items-center">
            <button
              onClick={handlePrevious}
              disabled={currentQuestion === 0}
              className={`flex items-center gap-2 px-6 py-3 rounded-2xl font-semibold transition-all duration-300 ${
                currentQuestion === 0
                  ? "bg-gray-200 text-gray-400 cursor-not-allowed"
                  : "bg-gray-100 text-gray-700 hover:bg-gray-200"
              }`}
            >
              <ChevronLeft className="w-5 h-5" />
              Ã–nceki
            </button>

            <div className="text-sm text-gray-600">
              {answers.filter(a => a !== null).length} / {QUESTIONS.length} cevaplandÄ±
            </div>

            {currentQuestion < QUESTIONS.length - 1 ? (
              <button
                onClick={handleNext}
                disabled={currentAnswer === null}
                className={`flex items-center gap-2 px-6 py-3 rounded-2xl font-semibold transition-all duration-300 ${
                  currentAnswer === null
                    ? "bg-gray-200 text-gray-400 cursor-not-allowed"
                    : "bg-gradient-to-r from-green-500 to-emerald-600 text-white hover:from-green-600 hover:to-emerald-700"
                }`}
              >
                Sonraki
                <ChevronRight className="w-5 h-5" />
              </button>
            ) : (
              <button
                onClick={handleSubmit}
                disabled={!allAnswered}
                className={`flex items-center gap-2 px-6 py-3 rounded-2xl font-semibold transition-all duration-300 ${
                  !allAnswered
                    ? "bg-gray-200 text-gray-400 cursor-not-allowed"
                    : "bg-gradient-to-r from-green-500 to-emerald-600 text-white hover:from-green-600 hover:to-emerald-700"
                }`}
              >
                Sonucu GÃ¶r
                <ChevronRight className="w-5 h-5" />
              </button>
            )}
          </div>
        </div>
      </div>
    </div>
  );
} 